tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.2.0/types.yaml
  - plugin:cloudify-azure-plugin?version= >=3.0.10

dsl_definitions:
  client_config: &azure_config
    subscription_id: { get_input: [ cloud_credentials, azure_subscription_id ] }
    tenant_id: { get_input: [ cloud_credentials, azure_tenant_id ] }
    client_id: { get_input: [ cloud_credentials, azure_client_id ] }
    client_secret: { get_input: [ cloud_credentials, azure_client_secret ] }

inputs:
  cloud_credentials:
    type: dict
  resource_config:
    type: dict
  resource_prefix:
    type: string


node_templates:
  rg_deployment:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint:
          id: { concat: [ { get_input: resource_prefix }, "-rg" ] }
          blueprint_archive: https://github.com/cloudify-community/eaas-example/releases/download/2.0rc1/rg.zip
          main_file_name: blueprint.yaml
        deployment:
          id: { concat: [ { get_input: resource_prefix }, 'rg' ] }
          inputs:
            resource_config:
              name: { concat: [ { get_input: resource_prefix }, 'rg' ] }
              azure_location_name: { get_input: [ cloud_credentials, region_name ] }
              subnet_1_tags:
                Name: { concat: [ { get_property: [ SELF, resource_config, deployment, inputs, resource_config, name ] }, '-subnet-1' ] }
              subnet_2_tags:
                Name: { concat: [ { get_property: [ SELF, resource_config, deployment, inputs, resource_config, name ] }, '-subnet-2' ] }
            cloud_credentials: { get_input: cloud_credentials }

  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      use_external_resource: true
      client_config: *azure_config
      location: { get_input: [ cloud_credentials, region_name ] }
      name: { get_attribute: [ rg_deployment, capabilities, rg_id ] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: rg_deployment

  network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      use_external_resource: true
      client_config: *azure_config
      location: { get_input: [ cloud_credentials, region_name ] }
      name: { get_attribute: [ rg_deployment, capabilities, vn_id ] }
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  private_subnet_1:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      use_external_resource: true
      client_config: *azure_config
      location: { get_input: [ cloud_credentials, region_name ] }
      name: { get_attribute: [ rg_deployment, capabilities, subnet_ids, 0 ] }
    relationships:
      - type: cloudify.azure.relationships.contained_in_virtual_network
        target: network

  private_subnet_2:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      use_external_resource: true
      client_config: *azure_config
      location: { get_input: [ cloud_credentials, region_name ] }
      name: { get_attribute: [ rg_deployment, capabilities, subnet_ids, 1 ] }
    relationships:
      - type: cloudify.azure.relationships.contained_in_virtual_network
        target: network
      - type: cloudify.relationships.depends_on
        target: private_subnet_1

  public_subnet_01:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      client_config: *azure_config
      name: { concat: [ { get_input: resource_prefix }, '-aks-public-subnet-1' ] }
      location: { get_input: [ cloud_credentials, region_name ] }
      tags:
        Name: { concat: [ { get_input: resource_prefix }, '-aks-public-subnet-1' ] }
      retry_after: 5
      resource_config:
        addressPrefix: 10.0.4.0/24
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: network
    - type: cloudify.relationships.depends_on
      target: private_subnet_2

  public_subnet_02:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      client_config: *azure_config
      name: { concat: [ { get_input: resource_prefix }, '-aks-public-subnet-2' ] }
      location: { get_input: [ cloud_credentials, region_name ] }
      tags:
        Name: { concat: [ { get_input: resource_prefix }, '-aks-public-subnet-2' ] }
      retry_after: 5
      resource_config:
        addressPrefix: 10.0.5.0/24
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: network
    - type: cloudify.relationships.depends_on
      target: public_subnet_01

  public_ip_01:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      client_config: *azure_config
      name: { concat: [ { get_input: resource_prefix }, '-public-ip-1' ] }
      location: { get_input: [ cloud_credentials, region_name ] }
      tags:
        Name: { concat: [ { get_input: resource_prefix }, '-public-ip-1' ] }
      retry_after: 5
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.depends_on
        target: public_subnet_01

  public_ip_cfg_01:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      location: { get_input: [ cloud_credentials, region_name ] }
      name: { concat: [ { get_input: resource_prefix }, '-public-ip-cfg-1' ] }
      azure_config: *azure_config
      retry_after: 5
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: public_subnet_01
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: private_subnet_1
      - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
        target: public_ip_01

  private_nat_gateway_01:
    type: cloudify.azure.nodes.network.LoadBalancer
    properties:
      client_config: *azure_config
      name: { concat: [ { get_input: resource_prefix }, '-lb-1' ] }
      location: { get_input: [ cloud_credentials, region_name ] }
      tags:
        Name: { concat: [ { get_input: resource_prefix }, '-lb-1' ] }
      retry_after: 5
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.depends_on
        target: public_subnet_01
      - type: cloudify.relationships.depends_on
        target: private_subnet_1
      - type: cloudify.azure.relationships.lb_connected_to_ip_configuration
        target: public_ip_cfg_01

  public_ip_02:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      client_config: *azure_config
      name: { concat: [ { get_input: resource_prefix }, '-public-ip-2' ] }
      location: { get_input: [ cloud_credentials, region_name ] }
      tags:
        Name: { concat: [ { get_input: resource_prefix }, '-public-ip-2' ] }
      retry_after: 5
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.depends_on
        target: private_nat_gateway_01

  public_ip_cfg_02:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      location: { get_input: [ cloud_credentials, region_name ] }
      name: { concat: [ { get_input: resource_prefix }, '-public-ip-cfg-2' ] }
      azure_config: *azure_config
      retry_after: 5
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: public_subnet_02
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: private_subnet_2
      - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
        target: public_ip_02

  private_nat_gateway_02:
    type: cloudify.azure.nodes.network.LoadBalancer
    properties:
      client_config: *azure_config
      name: { concat: [ { get_input: resource_prefix }, '-lb-2' ] }
      location: { get_input: [ cloud_credentials, region_name ] }
      tags:
        Name: { concat: [ { get_input: resource_prefix }, '-lb-2' ] }
      retry_after: 5
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.depends_on
        target: private_subnet_2
      - type: cloudify.relationships.depends_on
        target: public_subnet_02
      - type: cloudify.azure.relationships.lb_connected_to_ip_configuration
        target: public_ip_cfg_02

  security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      client_config: *azure_config
      location: { get_input: [ cloud_credentials, region_name ] }
      name: { concat: [ { get_input: resource_prefix }, '-aks-test-group' ] }
      resource_config:
        securityRules:
          - name: { concat: [ { get_input: resource_prefix }, '-aks-test-group-allow-all' ] }
            properties:
              description: Allow all
              protocol: '*'
              sourcePortRange: '*'
              destinationPortRange: '*'
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 100
              access: Allow
              direction: Inbound
    relationships:
      - type: cloudify.azure.relationships.contained_in_virtual_network
        target: network
      - type: cloudify.relationships.depends_on
        target: private_nat_gateway_02

  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      use_external_resource: true
      client_config: *azure_config
      name: { get_attribute: [ rg_deployment, capabilities, sa_id ] }
      location: { get_input: [ cloud_credentials, region_name ] }
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.relationships.depends_on
        target: security_group

capabilities:
  rg_id:
    value: { get_attribute: [ resource_group, name ] }
  vn_id:
    value: { get_attribute: [ network, resource_id ] }
  private_subnet_ids:
    value:
      - { get_attribute: [ private_subnet_1, resource_id ] }
      - { get_attribute: [ private_subnet_2, resource_id ] }
  public_subnet_ids:
    value:
      - { get_attribute: [ public_subnet_01, resource_id ] }
      - { get_attribute: [ public_subnet_02, resource_id ] }
  public_ips:
    value:
      - { get_attribute: [ public_ip_01, resource_id ] }
      - { get_attribute: [ public_ip_02, resource_id ] }
  aks_security_group_id:
    value: { get_attribute: [ security_group, name ] }
  resource_prefix:
    value: { get_input: resource_prefix }

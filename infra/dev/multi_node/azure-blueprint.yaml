tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.2.0/types.yaml
  - plugin:cloudify-azure-plugin?version= >=3.0.10

dsl_definitions:
  client_config: &azure_config
    subscription_id: { get_input: [ cloud_credentials, azure_subscription_id ] }
    tenant_id: { get_input: [ cloud_credentials, azure_tenant_id ] }
    client_id: { get_input: [ cloud_credentials, azure_client_id ] }
    client_secret: { get_input: [ cloud_credentials, azure_client_secret ] }

inputs:
  resource_config:
    type: resource_config
  cloud_credentials:
    type: dict
  resource_prefix:
    type: string

data_types:
  resource_config:
    properties:
      image:
        type: dict
      vm_size:
        type: string


node_templates:
  # rg_deployment:
  #   type: cloudify.nodes.Component
  #   properties:
  #     resource_config:
  #       blueprint:
  #         id: rg
  #         external_resource: true
  #       deployment:
  #         id: { concat: [ { get_input: resource_prefix }, 'rg' ] }
  #         inputs:
  #           cloud_credentials: { get_input: cloud_credentials }
  #           resource_config:
  #             name: { concat: [ { get_input: resource_prefix }, 'rg' ] }
  #             azure_location_name: { get_input: [ cloud_credentials, region_name ]}
  #
  # resource_group:
  #   type: cloudify.azure.nodes.ResourceGroup
  #   properties:
  #     use_external_resource: true
  #     client_config: *azure_config
  #     location: { get_input: [ cloud_credentials, region_name ] }
  #     name: { get_attribute: [ rg_deployment, capabilities, rg_id ] }
  #   relationships:
  #     - type: cloudify.relationships.depends_on
  #       target: rg_deployment

  k8s_vm_deployment:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint: &vm_blueprint_config
          id: azure_vm
          external_resource: true
        deployment:
          id: { concat: [ { get_input: resource_prefix }, '-vm-k8s' ] }
          inputs:
            cloud_credentials: { get_input: cloud_credentials }
            resource_config: &vm_deployment_inputs_resource_config
              rg_deployment_id: { get_attribute: [ rg_deployment, deployment, id ] }
              resource_prefix: { concat: [ { get_input: resource_prefix }, '-k8s' ] }
              azure_location_name: { get_input: [ cloud_credentials, region_name ] }
              image: { get_input: [ resource_config, image ] }
              vm_size: { get_input: [ resource_config, vm_size ] }
    # relationships:
    #   - target: rg_deployment
    #     type: cloudify.relationships.depends_on

  db_vm_deployment:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint: *vm_blueprint_config
        deployment:
          id: { concat: [ { get_input: resource_prefix }, '-vm-db' ] }
          inputs:
            cloud_credentials: { get_input: cloud_credentials }
            resource_config:
              <<: *vm_deployment_inputs_resource_config
              resource_prefix: { concat: [ { get_input: resource_prefix }, '-db' ] }
    # relationships:
    #   - target: rg_deployment
    #     type: cloudify.relationships.depends_on

  s3_vm_deployment:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint: *vm_blueprint_config
        deployment:
          id: { concat: [ { get_input: resource_prefix }, '-vm-s3' ] }
          inputs:
            cloud_credentials: { get_input: cloud_credentials }
            resource_config:
              <<: *vm_deployment_inputs_resource_config
              resource_prefix: { concat: [ { get_input: resource_prefix }, '-s3' ] }
    # relationships:
    #   - target: rg_deployment
    #     type: cloudify.relationships.depends_on

capabilities:
  k8s_vm_ip:
    value: { get_attribute: [ k8s_vm_deployment, capabilities, vm_ip ] }
  db_vm_ip:
    value: { get_attribute: [ db_vm_deployment, capabilities, vm_ip ] }
  s3_vm_ip:
    value: { get_attribute: [ s3_vm_deployment, capabilities, vm_ip ] }
  resource_prefix:
    value: { get_input: resource_prefix }

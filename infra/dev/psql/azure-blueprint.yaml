tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.2.0/types.yaml
  - plugin:cloudify-fabric-plugin?version= >=2.0.7

inputs:
  resource_config:
    type: resource_config
  cloud_credentials:
    type: dict
  network_deployment_id:
    type: string

data_types:
  resource_config:
    properties:
      master_username:
        type: string

node_templates:
  network:
    type: cloudify.nodes.SharedResource
    properties:
      resource_config:
        deployment:
          id: { get_input: network_deployment_id }

  database:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/install-psql.sh
            fabric_env: &fabric_env
              host: { get_attribute: [ network, capabilities, db_vm_ip ] }
              user: centos
              connect_kwargs:
                pkey: { get_input: [ cloud_credentials, private_key_content ] }
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/configure-psql.sh
            fabric_env: *fabric_env
            master_username: { get_input: [ resource_config, master_username ] }
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/start-psql.sh
            fabric_env: *fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/stop-psql.sh
            fabric_env: *fabric_env
    relationships:
      - target: network
        type: cloudify.relationships.depends_on

capabilities:
  host:
    value: { get_attribute: [ network, capabilities, db_vm_ip ] }
  master_username:
    value: { get_attribute: [ database, master_username ] }
  master_password:
    value: { get_attribute: [ database, master_password ] }
